<UserControl x:Class="AnyStatus.Apps.Windows.Features.Dashboard.DashboardView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:AnyStatus.Apps.Windows.Features.Dashboard"
             xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:controls="clr-namespace:AnyStatus.Apps.Windows.Features.Dashboard.Controls"
             xmlns:widgets="clr-namespace:AnyStatus.API.Widgets;assembly=AnyStatus.API"
             xmlns:dataTemplates="clr-namespace:AnyStatus.Apps.Windows.Features.Dashboard.DataTemplates"
             xmlns:converters="clr-namespace:AnyStatus.Apps.Windows.Infrastructure.Converters"
             xmlns:b="clr-namespace:AnyStatus.Apps.Windows.Infrastructure.Behaviors"
             mc:Ignorable="d">
    <UserControl.Resources>

        <converters:IconConverter x:Key="IconConverter"/>
        <dataTemplates:WidgetTemplateSelector x:Key="WidgetTemplateSelector"/>

        <Style x:Key="TreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
            <Style.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="Grid.ColumnSpan" Value="2" />
                </Style>
            </Style.Resources>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="Margin" Value="0,4,0,0" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="Background" Value="{DynamicResource WidgetBackground}"/>
            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
        </Style>

        <Style x:Key="ParentTreeViewItemStyle" TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource TreeViewItemStyle}">
            <Setter Property="Margin" Value="0,0,0,4" />
        </Style>

        <HierarchicalDataTemplate x:Key="WidgetTemplate"
                                  DataType="widgets:Widget" 
                                  ItemsSource="{Binding}"
                                  ItemContainerStyle="{StaticResource TreeViewItemStyle}">
            <dataTemplates:WidgetView/>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate x:Key="FolderTemplate" 
                                  DataType="widgets:Widget" 
                                  ItemsSource="{Binding}"
                                  ItemContainerStyle="{StaticResource TreeViewItemStyle}">
            <dataTemplates:FolderView/>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate x:Key="MetricTemplate"
                                  DataType="widgets:Widget"
                                  ItemsSource="{Binding}"
                                  ItemContainerStyle="{StaticResource TreeViewItemStyle}">
            <dataTemplates:MetricView/>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate x:Key="PipelineTemplate"
                                  DataType="widgets:Widget"
                                  ItemsSource="{Binding}"
                                  ItemContainerStyle="{StaticResource TreeViewItemStyle}">
            <dataTemplates:PipelineView/>
        </HierarchicalDataTemplate>

        <HierarchicalDataTemplate x:Key="LabelTemplate"
                                  DataType="widgets:Widget"
                                  ItemsSource="{Binding}"
                                  ItemContainerStyle="{StaticResource TreeViewItemStyle}">
            <dataTemplates:LabelView/>
        </HierarchicalDataTemplate>

        <PopupAnimation x:Key="{x:Static SystemParameters.MenuPopupAnimationKey}">
            <!--disable animation to prevent context menu blinks --> None
        </PopupAnimation>

        <ContextMenu x:Key="ContextMenu" ItemsSource="{Binding ContextMenuViewModel.Items}">
            <ContextMenu.Resources>
                <ControlTemplate x:Key="SeparatorTemplate">
                    <Separator Margin="30,1,0,1" Background="DimGray" />
                </ControlTemplate>
            </ContextMenu.Resources>
            <ContextMenu.ItemContainerStyle>
                <Style TargetType="{x:Type MenuItem}">
                    <Setter Property="Margin" Value="0"/>
                    <Setter Property="Padding" Value="15,7"/>
                    <Setter Property="Header" Value="{Binding Name}"/>
                    <Setter Property="IsEnabled" Value="{Binding IsEnabled}"/>
                    <!--<Setter Property="ItemsSource" Value="{Binding Item}"/>-->
                    <Setter Property="Command" Value="{Binding Command}"/>
                    <Setter Property="InputGestureText" Value="{Binding InputGestureText}"/>
                    <Setter Property="Icon" Value="{Binding Icon, Converter={StaticResource IconConverter}}"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding}" Value="{x:Null}">
                            <Setter Property="Template" Value="{StaticResource SeparatorTemplate}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsEnabled}" Value="False">
                            <Setter Property="Opacity" Value="0.4"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ContextMenu.ItemContainerStyle>
        </ContextMenu>

        <Style x:Key="TextStyle" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
            <Setter Property="Visibility" Value="Collapsed"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Opacity" Value="0.7"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Context.Session.Widget.Count}" Value="0">
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

    </UserControl.Resources>

    <Grid ContextMenu="{StaticResource ContextMenu}"
          Style="{DynamicResource DashboardPanelStyle}"
          d:DataContext="{d:DesignInstance Type=local:DashboardViewModel, IsDesignTimeCreatable=False}">

        <behaviors:Interaction.Triggers>
            <behaviors:EventTrigger EventName="ContextMenuOpening">
                <behaviors:InvokeCommandAction Command="{Binding Commands[OpenContextMenu]}" CommandParameter="{Binding ElementName=TreeView, Path=SelectedItem}" />
            </behaviors:EventTrigger>
            <behaviors:EventTrigger EventName="ContextMenuClosing">
                <behaviors:InvokeCommandAction Command="{Binding Commands[CloseContextMenu]}" CommandParameter="{Binding ElementName=TreeView, Path=SelectedItem}" />
            </behaviors:EventTrigger>
        </behaviors:Interaction.Triggers>

        <TextBlock Style="{StaticResource TextStyle}" TextWrapping="Wrap">Click the add widget button above to create a widget</TextBlock>

        <controls:TreeView x:Name="TreeView"
                           ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                           b:TreeViewHelper.SelectedItem="{Binding Context.Session.SelectedWidget, Mode=OneWayToSource}"
                           Selected="{Binding Context.Session.SelectedWidget, Mode=TwoWay}"
                           ItemsSource="{Binding Context.Session.Widget}"
                           ItemTemplateSelector="{StaticResource WidgetTemplateSelector}"
                           ItemContainerStyle="{StaticResource ParentTreeViewItemStyle}"
                           VirtualizingPanel.IsVirtualizing="False"
                           FocusVisualStyle="{x:Null}">

            <TreeView.InputBindings>
                <!--<KeyBinding Key="C" Modifiers="Ctrl" Command="{Binding Commands[Copy]}" CommandParameter="{Binding ElementName=TreeView, Path=SelectedItem}" />-->
                <!--<KeyBinding Key="V" Modifiers="Ctrl" Command="{Binding Commands[Paste]}" CommandParameter="{Binding ElementName=TreeView, Path=SelectedItem}" />-->
                <!--<KeyBinding Key="F2" Command="{Binding Commands[Rename]}" CommandParameter="{Binding ElementName=TreeView, Path=SelectedItem}" />-->
                <KeyBinding Key="Delete" Command="{Binding Commands[Delete]}" CommandParameter="{Binding ElementName=TreeView, Path=SelectedItem}" />
                <KeyBinding Key="Up" Modifiers="Alt" Command="{Binding Commands[MoveUp]}" CommandParameter="{Binding ElementName=TreeView, Path=SelectedItem}" />
                <KeyBinding Key="Down" Modifiers="Alt" Command="{Binding Commands[MoveDown]}" CommandParameter="{Binding ElementName=TreeView, Path=SelectedItem}" />
            </TreeView.InputBindings>

        </controls:TreeView>

    </Grid>

</UserControl>
